from copy import copy
l = ['0000101001100111000111011', '0000110100011010011110100', '0000110100011110011010100', '0000110100011110011110100', '0000111000011010011010000', '0000111000011010011010100', '0000111000011010111010100', '0000111100011010111010100', '0000111100011110011010100', '0001010000011010101010100', '0001010000011010111000100', '0001010000011010111010100', '0001010000111010011010100', '0001010000111110011110100', '0001010000111110111010100', '0001010100011000111010100', '0001010100011010011010100', '0001010100011010101010100', '0001010100011010111010100', '0001010100011010111100100', '0001010100011010111110100', '0001010100011110111010100', '0001010100111110011010100', '0001010100111110111110100', '0001110000001010111010100', '0001110000011010011010000', '0001110000011010011010100', '0001110000011010011110100', '0001110000011010101010100', '0001110000011010111000100', '0001110000011010111010100', '0001110000011010111010110', '0001110000011010111100100', '0001110000011010111110100', '0001110000011110011010100', '0001110000011110111010100', '0001110000111010111010100', '0001110000111110011010000', '0001110000111110011010100', '0001110000111110011110100', '0001110000111110111010100', '0001110000111110111110100', '0001110001010010111010100', '0001110010011010111000100', '0001110100001010101010100', '0001110100001010111010110', '0001110100011010011010000', '0001110100011010011010100', '0001110100011010011110100', '0001110100011010101010100', '0001110100011010111010100', '0001110100011010111010110', '0001110100011010111110100', '0001110100011110011010000', '0001110100011110011010100', '0001110100011110011110000', '0001110100011110011110100', '0001110100011110111010100', '0001110100011110111110100', '0001110100111010011010100', '0001110100111010111010100', '0001110100111110011110100', '0001110100111110111010100', '0001110101010010111010100', '0001111000010010011010100', '0001111000011010010010100', '0001111000011010011010100', '0001111000011010011110100', '0001111000011011011010100', '0001111001011010011010100', '0001111100010010111010100', '0001111100011010011110100', '0001111100011010111010100', '0001111100011110011010100', '0001111101011010111010100', '0011000010001000101000100', '0011000010001000101000110', '0011000010001000101010100', '0011000010001100101000110', '0011000010001100101100110', '0011000010101000101000010', '0011000110001000101000110', '0011000110001000101010100', '0011000110001000101100110', '0011000110001100101000110', '0011000110001100101010100', '0011000110001100101100110', '0011000110101100101000110', '0011000110101100101100110', '0011100010001000101000110', '0011100110001000101000110', '0011100110001000101010100', '0011100110001100101100110', '0100001101000111100111111', '0100010100011010111110000', '0100010100011010111110100', '0100010100111110111110000', '0100011100011010111010100', '0100011100111110111110000', '0100011101111110111110000', '0101000100001010101010111', '0101010000011010101010110', '0101010000011010111000110', '0101010000011010111010100', '0101010000011010111110100', '0101010000011110111010100', '0101010000011110111110100', '0101010000111010111010100', '0101010000111010111110000', '0101010000111010111110100', '0101010000111110011110100', '0101010000111110111010100', '0101010100001000101010110', '0101010100001010101010110', '0101010100001010111010100', '0101010100001010111010110', '0101010100001110111110110', '0101010100011010011010000', '0101010100011010011010100', '0101010100011010011110100', '0101010100011010101010100', '0101010100011010101010110', '0101010100011010111000110', '0101010100011010111010000', '0101010100011010111010100', '0101010100011010111010110', '0101010100011010111110000', '0101010100011010111110100', '0101010100011110011110100', '0101010100011110111110100', '0101010100011110111110110', '0101010100111010011010100', '0101010100111010111010100', '0101010100111110011010100', '0101010100111110011110100', '0101010100111110111010100', '0101010100111110111110000', '0101010100111110111110100', '0101010101010010111010100', '0101011100000010111011111', '0101011100010010111010100', '0101011100011010111010100', '0101011100011010111110100', '0101011101011010111010100', '0101011101111110111110000', '0101110000011010111010100', '0101110000011010111110100', '0101110100011010111010100', '0101110100011010111110100', '0101110100011110111110100', '0110100110001100001100110', '0111000110001000101000110', '0111000110001000101010110', '0111000110001010101010110', '0111000110001100101100110', '0111000110101100001100110', '0111100010001000001100110', '0111100010001000101000110', '0111100010001100101100110', '0111100110001000001100110', '0111100110001000101000100', '0111100110001000101000110', '0111100110001100001100110', '0111100110001100101000110', '0111100110001100101100110', '0111101010001000001100110']

N1 = 222

def L1(starting_bits, bit_len):
    '''L1 generator
       Generates sequence of degree 25 and len == bit_len using polynom (x**25 ^ x**3 ^ 1)'''
    x = copy(starting_bits)
    #print(starting_bits)
    for i in range(0, bit_len-25):
        x += str(int(x[i]) ^ int(x[i+3]))
    return x

zi

def analyze_stats(lst, N1):
    stat = {}
    z = zi[:N1]
    for l in lst:
        x = L1(l, N1)
        R = sum(int(x[d]) ^ int(z[d]) for d in range(N1))
        stat[l] = R
    return stat

print(analyze_stats(l, N1))

